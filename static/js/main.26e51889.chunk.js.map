{"version":3,"sources":["reportWebVitals.js","components/Todo.js","components/Form.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","require","Todo","props","useState","isEditing","setEditing","newName","setNewName","priceChange","priceChangePercentage","priceInfo","setPriceInfo","editFieldRef","useRef","editButtonRef","currentPrice","highestPrice","lowestPrice","openPrice","previousPrice","price","setPrice","wasEditing","value","ref","useEffect","current","usePrevious","apiUrl","name","focus","fetchPrice","a","response","stockPrice","data","c","h","l","o","pc","Math","abs","console","log","id","setInterval","clearInterval","editingTemplate","className","onSubmit","e","preventDefault","editTask","htmlFor","type","onChange","target","onClick","viewTemplate","style","color","Number","toFixed","deleteTask","Form","setName","addTask","placeholder","required","autoComplete","App","tasks","setTasks","prevTaskLenght","length","listHeadingRef","taskList","map","task","tasksNoun","headingText","remainingTasks","filter","editedTasks","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26e51889.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {useEffect ,useRef, useState} from \"react\";\r\nconst axios = require('axios');\r\n// const async = require(\"async\");\r\nconst apiKey = \"c1433cn48v6s4a2e39q0\";\r\nconst preUrl = \"https://finnhub.io/api/v1/quote?symbol=\";\r\n\r\n\r\nexport default function Todo(props){\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n    const [priceInfo, setPriceInfo] = useState({priceChange:0, priceChangePercentage:0});\r\n    const editFieldRef = useRef(null);\r\n    const editButtonRef = useRef(null);\r\n    const [price, setPrice] = useState({ currentPrice: 0,\r\n    highestPrice: 0, lowestPrice:0, openPrice:0, previousPrice:0});\r\n    const wasEditing = usePrevious(isEditing);\r\n    const apiUrl = `${preUrl}${props.name}&token=${apiKey}`;\r\n\r\n    function usePrevious(value){\r\n        const ref=useRef();\r\n        useEffect(()=>{\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if (!wasEditing && isEditing) {\r\n            editFieldRef.current.focus();\r\n        }\r\n        if (wasEditing && !isEditing) {\r\n            editButtonRef.current.focus();\r\n        }\r\n    }, [wasEditing, isEditing]);\r\n    \r\n    useEffect(()=>{\r\n        async function fetchPrice(){\r\n            try{\r\n                let priceChange, priceChangePercentage;\r\n                const response = await axios(apiUrl);\r\n                const stockPrice = {\r\n                    'currentPrice': response.data.c,\r\n                    'highestPrice': response.data.h,\r\n                    'lowestPrice': response.data.l,\r\n                    'openPrice': response.data.o,\r\n                    'previousPrice':response.data.pc\r\n                };\r\n                setPrice(stockPrice);\r\n                priceChange = stockPrice.currentPrice-stockPrice.previousPrice;\r\n                priceChangePercentage = Math.abs(priceChange / stockPrice.previousPrice * 100);\r\n                setPriceInfo({priceChange, priceChangePercentage});\r\n            } catch (error){\r\n                console.log(error);\r\n            }\r\n    }\r\n        fetchPrice();\r\n        const id = setInterval(() => {\r\n            fetchPrice();\r\n            \r\n        }, 60000);\r\n        return ()=>clearInterval(id);\r\n    },[apiUrl]);\r\n    \r\n    \r\n    const editingTemplate = (\r\n        <form className=\"stack-small\" onSubmit={(e)=>{e.preventDefault(); props.editTask(props.id, newName); setNewName(\"\"); setEditing(false)}} ref={editFieldRef}>\r\n            <div className=\"form-group\">\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    Input a stock name:\r\n                </label>\r\n                <input id={props.id} className=\"todo-text\" type=\"text\" value={newName} onChange={e=>{setNewName(e.target.value);}}\r\n                />\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button type=\"button\" className=\"btn todo-cancel\" onClick={()=>{setEditing(false);}}>\r\n                    Cancel\r\n                    <span className=\"visually-hidden\">Input a stock name:</span>\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n                    Save\r\n                    <span className=\"visually-hidden\">Input a stock name:</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n    const viewTemplate=(\r\n    <div className=\"stack-small\">\r\n    <div className=\"c-cb\">       \r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n        </label> \r\n        <span className=\"stock-price\">{price.currentPrice}</span><br/>\r\n        <span className=\"stock-price\" style={{color:priceInfo.priceChange>0?\"green\":\"red\"}}>{Number(priceInfo.priceChange).toFixed(2)}({Number(priceInfo.priceChangePercentage).toFixed(2)}%)</span>\r\n    </div>\r\n    <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\" onClick={()=>setEditing(true)} ref={editButtonRef}>\r\n            Edit <span className=\"visually-hidden\">{props.name} </span>\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn__danger\" onClick={()=>{props.deleteTask(props.id)}}>\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n    </div>\r\n    </div>\r\n);\r\n\r\n\r\n\r\n    return(\r\n        <li className=\"todo\">{isEditing? editingTemplate: viewTemplate}</li>\r\n    );\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default function Form(props){\r\n    const [name, setName] = useState('');\r\n    function handleSubmit(e){\r\n      e.preventDefault();\r\n      props.addTask(name);\r\n      setName(\"\");\r\n    }\r\n    function handleChange(e){\r\n      setName(e.target.value);\r\n    }\r\n    return (<form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\"><label htmlFor=\"new-todo-input\" className=\"label__lg\">What stock do you want to add?</label></h2>\r\n      \r\n      <input type=\"text\" placeholder=\"Input a new stock\" id=\"new-todo-input\" required className=\"input input__lg\" name=\"text\" autoComplete=\"off\" value={name} onChange={handleChange} />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">Add</button>\r\n      </form>);  \r\n};","import Todo from \"./components/Todo\";\r\nimport Form from \"./components/Form\";\r\nimport FilterButton from \"./components/FilterButton\";\r\nimport React, {useState, useRef, useEffect} from \"react\";\r\nimport {nanoid} from \"nanoid\";\r\nconst axios = require('axios');\r\n\r\n// const FILTER_MAP={\r\n//   All:()=>true,\r\n//   Active: task=>!task.completed,\r\n//   completed: task=>task.completed,\r\n// }\r\n// const FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction App(props) {\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const prevTaskLenght = usePrevious(tasks.length);\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(()=>{\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n  const listHeadingRef = useRef(null);\r\n  const taskList = tasks.map(task => (<Todo id={task.id} name={task.name} key={task.id}  deleteTask={deleteTask} editTask={editTask}/>));\r\n  const tasksNoun = taskList.length!==1? 'stocks' : 'stock';\r\n  const headingText = `${taskList.length} ${tasksNoun}`;\r\n\r\n  useEffect(()=>{\r\n    if (taskList.length-prevTaskLenght ===-1){\r\n      listHeadingRef.current.focus();\r\n    }\r\n  }, [tasks.length, prevTaskLenght]);\r\n  function deleteTask(id){\r\n    const remainingTasks = tasks.filter(task=> id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName){\r\n    const editedTasks=tasks.map(task=>{\r\n      if (id === task.id){\r\n        return {...task, name:newName};\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTasks);\r\n  }\r\n\r\n\r\n\r\n  function addTask(name){\r\n    const newTask = {id:\"todo-\" + nanoid(), name:name};\r\n    setTasks([...tasks, newTask]);\r\n    // console.log(tasks);\r\n  }\r\n  // axios.get('https://finnhub.io/api/v1/quote?symbol=AMD&token=c1433cn48v6s4a2e39q0')\r\n  //   .then(function (response) {\r\n  //       // handle success\r\n  //       console.log(response);\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //       // handle error\r\n  //       console.log(error);\r\n  //   })\r\n  //   .then(function () {\r\n  //       // always executed\r\n  //   });\r\n  // setInterval(() => {\r\n  //   axios.get('https://finnhub.io/api/v1/quote?symbol=AMD&token=c1433cn48v6s4a2e39q0')\r\n  //   .then(function (response) {\r\n  //       // handle success\r\n  //       console.log(response);\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //       // handle error\r\n  //       console.log(error);\r\n  //   })\r\n  //   .then(function () {\r\n  //       // always executed\r\n  //   });\r\n  // }, 10000);\r\n  \r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <h1>Stock Prices</h1>\r\n        <Form addTask={addTask}/>\r\n      <div className=\"filters btn-group stack-exception\">\r\n      \r\n      </div>\r\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>{headingText}</h2>\r\n      <ul role=\"list\" className=\"todo-list stack-large stack-exception\" aria-labelledby='list-heading'>\r\n        {taskList}        \r\n      </ul>\r\n    </div> \r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from \"./App\"\r\nconst DATA=[{id:\"todo-0\", name:\"STM\"},\r\n{id: \"todo-1\", name:\"TXN\"},\r\n// {id: \"todo-2\", name:\"AMD\"},\r\n// {id: \"todo-3\", name:\"MSFT\"},\r\n// {id: \"todo-4\", name:\"INTC\"},\r\n];\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <App tasks={DATA}/>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}