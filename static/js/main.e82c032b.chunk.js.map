{"version":3,"sources":["reportWebVitals.js","components/Todo.jsx","components/Form.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Todo","props","useState","isEditing","setEditing","newName","setNewName","hidden","setHidden","priceChange","priceInfo","priceCur","pricePre","priceChangePercentage","Math","abs","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","type","value","onChange","target","onClick","viewTemplate","onMouseOver","console","log","onMouseOut","name","style","color","Number","toFixed","display","deleteTask","Form","setName","addTask","placeholder","required","autoComplete","axios","require","moment","apiKey","preUrl","App","stocks","setStocks","format","timeUpdate","SetTime","listHeadingRef","useRef","stockList","map","stock","tasksNoun","length","headingText","fetchData","promises","apiUrl","api","all","spread","responses","newStocks","index","data","pc","c","catch","errors","remainingTasks","filter","task","encodeURI","toUpperCase","trim","includes","alert","editedTasks","forEach","get","response","t","callback","delay","savedCallback","useEffect","current","setInterval","clearInterval","useInterval","textAlign","newTask","nanoid","tabIndex","ref","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e82c032b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {useEffect ,useRef, useState} from \"react\";\r\n\r\nexport default function Todo(props){\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n    const [hidden, setHidden] = useState(true);\r\n    const priceChange = props.priceInfo.priceCur-props.priceInfo.pricePre;\r\n    const priceChangePercentage = Math.abs(priceChange / props.priceInfo.pricePre * 100);\r\n\r\n\r\n    function mouserOver(){\r\n        setHidden(false);\r\n        console.log(\"Over\");\r\n    }\r\n    function mouseOut(){\r\n        setHidden(true);\r\n        console.log(\"Out\");\r\n    }\r\n \r\n    \r\n    const editingTemplate = (\r\n        <form className=\"stack-small\" onSubmit={(e)=>{e.preventDefault(); props.editTask(props.id, newName); setNewName(\"\"); setEditing(false)}}>\r\n            <div className=\"form-group\">\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    Input a stock name:\r\n                </label>\r\n                <input id={props.id} className=\"todo-text\" type=\"text\" value={newName} onChange={e=>{setNewName(e.target.value);}}\r\n                />\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button type=\"button\" className=\"btn todo-cancel\" onClick={()=>{setEditing(false);}}>\r\n                    Cancel\r\n                    <span className=\"visually-hidden\">Input a stock name:</span>\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n                    Save\r\n                    <span className=\"visually-hidden\">Input a stock name:</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n    const viewTemplate=(\r\n    <div className=\"stack-small\" onMouseOver={mouserOver} onMouseOut={mouseOut}>\r\n    <div className=\"c-cb\"  >       \r\n        <div className=\"stock-container\">\r\n            <label className=\"todo-label\" htmlFor={props.id}>\r\n                {props.name}\r\n            </label> \r\n            <div>      \r\n                <span className=\"stock-price\">{props.priceInfo.priceCur}</span><br/>\r\n                <span className=\"stock-price\" style={{color:priceChange>0?\"green\":\"red\"}}>{priceChange>0?\"+\":\"\"}{Number(priceChange).toFixed(2)} ({Number(priceChangePercentage).toFixed(2)}%)<br/></span>\r\n            </div>  \r\n        </div>\r\n    </div>\r\n    <div className=\"btn-group\"  style={{display: hidden?\"none\":\"\"}}>\r\n        <button type=\"button\" className=\"btn\" onClick={()=>setEditing(true)} >\r\n            Edit <span className=\"visually-hidden\">{props.name} </span>\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn__danger\" onClick={()=>{props.deleteTask(props.id)}}>\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n    </div>\r\n    </div>\r\n);\r\n\r\n\r\n    return(\r\n        <li className=\"todo\">{isEditing? editingTemplate: viewTemplate}</li>\r\n    );\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default function Form(props){\r\n    const [name, setName] = useState('');\r\n    function handleSubmit(e){\r\n      e.preventDefault();\r\n      props.addTask(name);\r\n      setName(\"\");\r\n    }\r\n    function handleChange(e){\r\n      setName(e.target.value);\r\n    }\r\n    return (<form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\"><label htmlFor=\"new-todo-input\" className=\"label__lg\">What stock do you want to add?</label></h2>\r\n      \r\n      <input type=\"text\" placeholder=\"Input a new stock\" id=\"new-todo-input\" required className=\"input input__lg\" name=\"text\" autoComplete=\"off\" value={name} onChange={handleChange} />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">Add</button>\r\n      </form>);  \r\n};","import Todo from \"./components/Todo\";\r\nimport Form from \"./components/Form\";\r\nimport React, {useState, useRef, useEffect} from \"react\";\r\nimport {nanoid} from \"nanoid\";\r\n// import useInterval from 'react-useinterval';\r\n\r\nconst axios = require('axios');\r\nconst moment = require(\"moment-timezone\");\r\nconst apiKey = \"c1433cn48v6s4a2e39q0\";\r\nconst preUrl = \"https://finnhub.io/api/v1/quote?symbol=\";\r\n\r\n\r\n\r\nfunction App(props) {\r\n  const [stocks, setStocks] = useState(props.stocks);\r\n  const [timeUpdate, SetTime] = useState(moment().format('LT'));\r\n  \r\n  \r\n  const listHeadingRef = useRef(null);\r\n  const stockList = stocks.map(stock => (<Todo id={stock.id} name={stock.name} key={stock.id}  deleteTask={deleteTask} editTask={editTask}\r\n  priceInfo={stock.priceInfo}/>));\r\n  const tasksNoun = stockList.length!==1? 'stocks' : 'stock';\r\n  const headingText = `${stockList.length} ${tasksNoun}`;\r\n  \r\n\r\n  // useEffect(()=>{\r\n  //   if (stockList.length-prevTaskLenght ===-1){\r\n  //     listHeadingRef.current.focus();\r\n  //   }\r\n  // }, [stockList.length, prevTaskLenght]);\r\n\r\n  useInterval(()=>{fetchData();}, 60000)\r\n\r\n  function fetchData() {\r\n    let apiList = stocks.map(stock=>({apiUrl:`${preUrl}${stock.name}&token=${apiKey}`}));\r\n    let promises = apiList.map(api=>axios(api.apiUrl));\r\n    // console.log(stocks);\r\n\r\n    axios.all(promises).then(axios.spread((...responses)=>{\r\n      const newStocks = stocks.map((stock, index)=>{\r\n        return {...stock, priceInfo:{'pricePre':responses[index].data.pc, 'priceCur':responses[index].data.c}};\r\n      });\r\n      setStocks(newStocks);\r\n      SetTime(moment().format('LT'));\r\n      \r\n    })).catch(errors => {\r\n      console.log(errors);\r\n    });\r\n  } \r\n\r\n  function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    });\r\n  \r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      fetchData();\r\n\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n  }\r\n\r\n  function deleteTask(id){\r\n    const remainingTasks = stocks.filter(task=> id !== task.id);\r\n    setStocks(remainingTasks);\r\n    // console.log(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, name){\r\n    let newName = encodeURI(name.toUpperCase().trim());\r\n\r\n    if (stocks.map(stock=>stock.name).includes(newName))\r\n    {\r\n      alert(newName + \" is already on the watch list\");\r\n      return;\r\n    }\r\n\r\n    const editedTasks=[...stocks];\r\n\r\n    stocks.forEach((task, index) => {\r\n      if (id=== task.id)\r\n      {\r\n        let tmpName = task.name;\r\n        let priceInfo={'pricePre':task.priceInfo.pricePre, 'priceCur':task.priceInfo.priceCur};\r\n        axios.get(`${preUrl}${newName}&token=${apiKey}`)\r\n        .then((response)=>{\r\n          if (response.data.t!==0){      \r\n            tmpName = newName;\r\n            priceInfo={'pricePre':response.data.pc, 'priceCur':response.data.c};\r\n            editedTasks[index].name = newName;\r\n            editedTasks[index].priceInfo = priceInfo;\r\n            console.log(stocks);\r\n            console.log(editedTasks);\r\n            setStocks(editedTasks);\r\n            console.log(priceInfo);\r\n          }\r\n          else{\r\n            alert(name + \" does not exist\");\r\n          }\r\n        })\r\n        .catch(errors=>{console.log(errors);});\r\n\r\n      }\r\n    });\r\n    // setStocks(editedTasks);\r\n    // stocks.map(task=>{\r\n    //   if (id === task.id){\r\n        \r\n        \r\n    //     console.log(priceInfo);\r\n    //     const pullPrice = async ()=>{\r\n    //       let tmpName = task.name;\r\n    //       let priceInfo={'pricePre':task.priceInfo.pricePre, 'priceCur':task.priceInfo.priceCur};\r\n    //       try {\r\n    //         const response = await axios.get(`${preUrl}${newName}&token=${apiKey}`);\r\n    //         console.log(response.data);\r\n    //         if (response.data.t!==0){      \r\n    //           tmpName = newName;\r\n    //           priceInfo={'pricePre':response.data.pc, 'priceCur':response.data.c};\r\n    //           console.log(priceInfo);\r\n    //         }\r\n    //         else{\r\n    //           alert(\"The \"+newName + \" is not a stock symbol\");\r\n    //         }\r\n    //       }\r\n    //       catch(error){\r\n    //         console.log(error);\r\n    //       }\r\n    //       return {tmpName, priceInfo};\r\n    //     }\r\n    //     const {tmpName, priceInfo} = pullPrice();\r\n    //     console.log(tmpName);\r\n    //     return {...task, name:tmpName, priceInfo:priceInfo};\r\n    //   }\r\n    //   return task;\r\n    // });\r\n    // setStocks(editedTasks);\r\n   \r\n  }\r\n\r\n  function addTask(name){\r\n    let newName = encodeURI(name.toUpperCase().trim());\r\n    if (stocks.map(stock=>stock.name).includes(newName))\r\n    {\r\n      alert(newName + \" is already on the watch list\");\r\n      return;\r\n    }\r\n    axios.get(`${preUrl}${newName}&token=${apiKey}`)\r\n    .then(response=>{\r\n      \r\n      const newTask = {id:\"todo-\" + nanoid(), name:newName, priceInfo:{'pricePre':response.data.pc, 'priceCur':response.data.c}};\r\n      \r\n      if (response.data.t!==0){      \r\n        setStocks([...stocks, newTask]);\r\n      }\r\n      else{\r\n        alert(\"The \"+newName + \" is not a stock symbol\");\r\n      }\r\n    })\r\n    .catch(errors=>{console.log(errors)});  \r\n  }\r\n \r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <h1>Stock Prices</h1>\r\n        <p style={{textAlign:\"center\"}}>Update at {timeUpdate}</p>\r\n        <Form addTask={addTask}/>\r\n      <div className=\"filters btn-group stack-exception\">\r\n      \r\n      </div>\r\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>{headingText}</h2>\r\n      <ul role=\"list\" className=\"todo-list stack-large stack-exception\" aria-labelledby='list-heading'>\r\n        {stockList}        \r\n      </ul>\r\n    </div> \r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from \"./App\"\r\nconst DATA=[{id:\"todo-0\", name:\"STM\", priceInfo:{'pricePre':0, 'priceCur':0}},\r\n{id: \"todo-1\", name:\"TXN\", priceInfo:{'pricePre':0, 'priceCur':0}},\r\n{id: \"todo-2\", name:\"AMD\", priceInfo:{'pricePre':0, 'priceCur':0}},\r\n{id: \"todo-3\", name:\"MSFT\", priceInfo:{'pricePre':0, 'priceCur':0}},\r\n{id: \"todo-4\", name:\"INTC\", priceInfo:{'pricePre':0, 'priceCur':0}},\r\n];\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <App stocks={DATA}/>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}